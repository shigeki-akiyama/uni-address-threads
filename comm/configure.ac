#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.
#
# 
# this file is initially generated by running autoscan
# in this directory and then modified to add necessary
# stuff
AC_PREREQ([2.69])
AC_INIT([mcomm], [0.1], [madm@eidos.ic.i.u-tokyo.ac.jp])
AC_CONFIG_AUX_DIR([misc/build-aux])
AC_CONFIG_HEADERS([include/madm/madm_comm_acconfig.h])
#AC_CONFIG_LIBOBJ_DIR([compat])
AC_CONFIG_MACRO_DIR([misc/m4])
AC_CONFIG_SRCDIR([src/madm_comm.cc])

# subdir-objects necessary for compiling uth/worker.cc etc. in 
# respective subdirs
AM_INIT_AUTOMAKE([foreign subdir-objects -Wall -Werror])

# avoid executing autotools on the user side
AM_MAINTAINER_MODE([disable])

# Checks for programs.

# use mpi++ to compile everything
# non-standard commands (e.g., mpig++px) must be
# given via MPICC=mpig++px
: ${CCFLAGS="-g -O3"}
: ${CXXFLAGS="-g -O3"}
AX_PROG_CXX_MPI([true])
AX_PROG_CC_MPI([true])

# install
AC_PROG_INSTALL

# ar
# added in reaction to:
# /usr/share/automake-1.14/am/ltlibrary.am: warning: 'libuth.la': linking libtool libraries using a non-POSIX
# /usr/share/automake-1.14/am/ltlibrary.am: archiver requires 'AM_PROG_AR' in 'configure.ac'
AM_PROG_AR

# assembler
# added for uni/context.S and iso/myth_context.S
AM_PROG_AS

if false; then

# Checks for libraries.

# Checks for header files.
AC_CHECK_HEADERS([fcntl.h inttypes.h limits.h stddef.h stdint.h stdlib.h string.h sys/time.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_CHECK_HEADER_STDBOOL
AC_C_INLINE
AC_TYPE_INT64_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_TYPE_UINT16_T
AC_TYPE_UINT32_T
AC_TYPE_UINT64_T
AC_TYPE_UINT8_T

# Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_FORK
# this one ends up defining malloc as rpl_malloc and causes a compilation
# error with cstdlib (at a line containing ::malloc)
#AC_FUNC_MALLOC
AC_FUNC_MMAP
AC_CHECK_FUNCS([clock_gettime floor ftruncate gettimeofday memmove memset munmap pow select])

fi

#
# custom options and checks
#
#

#
# check if C++11 is supported
# (necessary for variadic template. the macro below
# automatically adds -std=gnu++11 or -std=c++11.
#

AX_CXX_COMPILE_STDCXX_0X
AS_IF([test "$ax_cv_cxx_compile_cxx0x_native" = "yes"], 
      # compiler support C++0x without any flag
      [],
      [AS_IF([test "$ax_cv_cxx_compile_cxx0x_gxx" = "yes"],
             # compiler support C++0x with -std=gnu++0x
             [CXXFLAGS="-std=gnu++0x $CXXFLAGS"],
             [AS_IF([test "$ax_cv_cxx_compile_cxx0x_cxx" = "yes"],
                    # compiler support C++0x with -std=c++0x
                    [CXXFLAGS="-std=c++0x $CXXFLAGS"],
                    [AC_MSG_ERROR([cannot find an option to support C++0x])])])])

AC_SUBST([ARMCI_INCLUDE_FLAG])
#AX_CXX_COMPILE_STDCXX_11([],[mandatory])

#
# --madi-debug-level=x --> -DMADI_DEBUG_LEVEL=x
#
AC_ARG_WITH([madi-debug-level],
            [AS_HELP_STRING([--with-madi-debug-level=n],
                            [Set debug level to n. Default: 0])],
            [madi_debug_level="$withval"],
            [madi_debug_level=0])

AC_DEFINE_UNQUOTED([MADI_DEBUG_LEVEL],[$madi_debug_level],[MADI Debug Level])

#
# --with-comm-layer={shmem,mpi3,fx10}
# depending on the arg, define Makefile.am conditional
# COMM_LAYER_SEQ and COMM_LAYER_FX10 to 0 or 1
# Makefile.am then add appropriate files to sources
#

AC_ARG_WITH([comm-layer],
            [AS_HELP_STRING([--with-comm-layer=c],
                            [Set comm layer to c. Default: shmem])],
            [comm_layer="MADI_COMM_LAYER_$(echo $withval | tr [[a-z]] [[A-Z]])"],
            [comm_layer="MADI_COMM_LAYER_SHMEM"])

# define MADI_COMM_LAYER MADI_COMM_LAYER_{SEQ,SHMEM,MPI3,GASNET,FX10}
# MPI3 implementation is experimental.
AC_DEFINE_UNQUOTED([MADI_COMM_LAYER],[$comm_layer],[MADI comm layer])
# used in Makefile.am to add appropriate source files 
AM_CONDITIONAL([MADI_COMM_LAYER_SEQ],   [test "x$comm_layer" = "xMADI_COMM_LAYER_SEQ"])
AM_CONDITIONAL([MADI_COMM_LAYER_SHMEM], [test "x$comm_layer" = "xMADI_COMM_LAYER_SHMEM"])
AM_CONDITIONAL([MADI_COMM_LAYER_MPI3],  [test "x$comm_layer" = "xMADI_COMM_LAYER_MPI3"])
AM_CONDITIONAL([MADI_COMM_LAYER_GASNET],  [test "x$comm_layer" = "xMADI_COMM_LAYER_GASNET"])
AM_CONDITIONAL([MADI_COMM_LAYER_FX10],  [test "x$comm_layer" = "xMADI_COMM_LAYER_FX10"])

#
# GASNet support
#
AS_IF([test "x$GASNET_CONDUIT" == x],
      [GASNET_CONDUIT="mpi"])
AS_IF([test "x$GASNET_THREAD" == x],
      [GASNET_THREAD="seq"])

GASNET_THREAD_DEFINE="-DGASNET_$(echo $GASNET_THREAD | tr [[a-z]] [[A-Z]])"

GASNET_CPPFLAGS="-I$GASNET_PREFIX/include"
GASNET_CPPFLAGS="$GASNET_CPPFLAGS -I$GASNET_PREFIX/include/$GASNET_CONDUIT-conduit"
GASNET_CPPFLAGS="$GASNET_CPPFLAGS $GASNET_THREAD_DEFINE"
GASNET_CPPFLAGS="$GASNET_CPPFLAGS -Wno-undef -Wno-deprecated-register -Wno-reserved-user-defined-literal"
GASNET_LDFLAGS="-L$GASNET_PREFIX/lib -lgasnet-$GASNET_CONDUIT-$GASNET_THREAD"

AS_IF([test "x$GASNET_CONDUIT" == xmpi],
      [GASNET_LDFLAGS="$GASNET_LDFLAGS -lammpi"])
AS_IF([test "x$GASNET_CONDUIT" == xibv],
      [GASNET_CPPFLAGS="$GASNET_CPPFLAGS -DGASNET_CONDUIT_IBV"])
AS_IF([test "x$GASNET_CONDUIT" == xibv],
      [GASNET_LDFLAGS="$GASNET_LDFLAGS -libverbs"])

AS_IF([test "x$GASNET_PREFIX" != x],
      [CPPFLAGS="$CPPFLAGS $GASNET_CPPFLAGS"])
AS_IF([test "x$GASNET_PREFIX" != x],
      [LDFLAGS="$LDFLAGS $GASNET_LDFLAGS"])


#
# here we go
#

LT_INIT([disable-shared])
AC_CONFIG_FILES([Makefile
		 include/Makefile
                 include/madm/Makefile
                 src/Makefile
                 examples/Makefile
                 examples/one_sided/Makefile
                 examples/perf/Makefile])
AC_OUTPUT
